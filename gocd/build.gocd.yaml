format_version: 4
common:
  backend: &build_backend
    artifacts:
      - build:
          source: app/build/libs
          destination: jars
      - test:
          source: app/build/test-results
          destination: test-reports
    tasks:
      - exec:
          command: dojo
          arguments:
            - "./gradlew app:build";
            - "./gradlew app:buildZip";
  lambdas: &build_lambdas
    artifacts:
      - build:
          source: CreateDocumentManifestByNhsNumber/build/libs
          destination: jars
    tasks:
      - exec:
          command: dojo
          arguments:
            - "./gradlew CreateDocumentManifestByNhsNumber:build"
  authoriser: &authoriser
    artifacts:
      - build:
          source: authoriser/build/libs
          destination: jars
    tasks:
      - exec:
          command: dojo
          arguments:
            - "./gradlew authoriser:build"
  plan_terraform: &plan_terraform
    artifacts:
      - build:
          source: terraform/tfplan
          destination: terraform/
    tasks:
      - fetch:
          stage: build
          job: backend
          source: jars
      - fetch:
          stage: build
          job: authoriser
          source: jars
      - fetch:
          stage: build
          job: lambdas
          source: jars
      - exec:
          command: dojo
          arguments:
            - ./tasks tf_plan
  deploy_terraform: &deploy_terraform
    tasks:
      - fetch:
          stage: plan_terraform
          job: plan
          source: terraform/tfplan
          destination: terraform/
          is_file: yes
      - fetch:
          stage: build
          job: backend
          source: jars
      - fetch:
          stage: build
          job: lambdas
          source: jars
      - fetch:
          stage: build
          job: authoriser
          source: jars
      - exec:
          command: dojo
          arguments:
            - ./tasks tf_apply
  deploy_ui: &deploy_ui
    tasks:
      - exec:
          command: dojo
          arguments:
            - -c
            - Dojofile-node
            - ./tasks install-ui-dependencies
      - exec:
          command: dojo
          arguments:
            - ./tasks configure-ui
      - exec:
          command: dojo
          arguments:
            - -c
            - Dojofile-node
            - ./tasks test-ui
      - exec:
          command: dojo
          arguments:
            - -c
            - Dojofile-node
            - ./tasks build-ui
      - exec:
          command: dojo
          arguments:
            - ./tasks deploy-ui
  e2e_test: &e2e_test
    tasks:
      - exec:
          command: dojo
          arguments:
            - ./tasks configure-e2e-test
      - exec:
          command: dojo
          arguments:
            - -c
            - Dojofile-node
            - ./tasks install-e2e-test-dependencies && ./tasks run-e2e-test
    artifacts:
      - test:
          source: e2eTest/cypress/screenshots
      - test:
          source: e2eTest/cypress/videos
pipelines:
  "access-request-fulfilment.dev":
    group: access-request-fulfilment
    label_template: "${git[:8]}"
    lock_behavior: "unlockWhenFinished"
    materials:
      git:
        type: configrepo
        blacklist:
          - .git*
          - .idea/**/*.*
          - docs/**/*.*
          - gradle/**/*.*
          - virusScanner/**/*.*
          - gocd/virus.scanner.build.gocd.yaml
    stages:
      - build:
          environment_variables:
            ENVIRONMENT: dev
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            backend: *build_backend
            authoriser: *authoriser
            lambdas: *build_lambdas
      - plan_terraform:
          environment_variables:
            ENVIRONMENT: dev
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            plan: *plan_terraform
      - deploy_terraform:
          environment_variables:
            ENVIRONMENT: dev
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            apply: *deploy_terraform
      - deploy_ui:
          environment_variables:
            ENVIRONMENT: dev
            NHS_CIS2_ENVIRONMENT: development
            OIDC_PROVIDER_ID: "cis2devoidc"
          clean_workspace: true
          jobs:
            deploy: *deploy_ui
      - app_integration_tests:
          environment_variables:
            ENVIRONMENT: dev
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            test:
              artifacts:
                - test:
                    source: app/build/test-results
                    destination: test-reports
              tasks:
                - exec:
                    command: dojo
                    arguments:
                      - ./tasks run-integration-test
      - e2e_tests:
          environment_variables:
            ENVIRONMENT: dev
            NHS_CIS2_ENVIRONMENT: development
            OIDC_PROVIDER_ID: "cis2devoidc"
          clean_workspace: true
          jobs:
            e2e-test: *e2e_test
  "access-request-fulfilment.pre-prod":
    group: access-request-fulfilment
    label_template: "${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - .git*
          - .idea/**/*.*
          - docs/**/*.*
          - gradle/**/*.*
          - virusScanner/**/*.*
          - gocd/virus.scanner.build.gocd.yaml
      dev_env:
        pipeline: access-request-fulfilment.dev
        stage: e2e_tests
    stages:
      - build:
          environment_variables:
            ENVIRONMENT: pre-prod
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            backend: *build_backend
            authoriser: *authoriser
            lambdas: *build_lambdas
      - plan_terraform:
          environment_variables:
            ENVIRONMENT: pre-prod
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            plan: *plan_terraform
      - deploy_terraform:
          approval:
            type: manual
            allow_only_on_success: true
          environment_variables:
            ENVIRONMENT: pre-prod
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            apply: *deploy_terraform
      - deploy_ui:
          environment_variables:
            ENVIRONMENT: pre-prod
            NHS_CIS2_ENVIRONMENT: development
            OIDC_PROVIDER_ID: "cis2devoidc"
          clean_workspace: true
          jobs:
            deploy: *deploy_ui
      - e2e_tests:
          environment_variables:
            ENVIRONMENT: pre-prod
            NHS_CIS2_ENVIRONMENT: development
            OIDC_PROVIDER_ID: "cis2devoidc"
          clean_workspace: true
          jobs:
            e2e-test: *e2e_test
  "access-request-fulfilment.prod":
    group: access-request-fulfilment
    label_template: "${git[:8]}"
    materials:
      git:
        type: configrepo
        blacklist:
          - .git*
          - .idea/**/*.*
          - docs/**/*.*
          - gradle/**/*.*
          - virusScanner/**/*.*
          - gocd/virus.scanner.build.gocd.yaml
      pre_prod_env:
        pipeline: access-request-fulfilment.pre-prod
        stage: e2e_tests
    stages:
      - build:
          environment_variables:
            ENVIRONMENT: prod
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            backend: *build_backend
            authoriser: *authoriser
            lambdas: *build_lambdas
      - plan_terraform:
          environment_variables:
            ENVIRONMENT: prod
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            plan: *plan_terraform
      - deploy_terraform:
          approval:
            type: manual
            allow_only_on_success: true
          environment_variables:
            ENVIRONMENT: prod
            NHS_CIS2_ENVIRONMENT: development
          clean_workspace: true
          jobs:
            apply: *deploy_terraform
      - deploy_ui:
          environment_variables:
            ENVIRONMENT: prod
            OIDC_PROVIDER_ID: "COGNITO"
          clean_workspace: true
          jobs:
            deploy: *deploy_ui
